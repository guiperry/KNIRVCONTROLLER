function m(o,l,a=[]){const i=e=>e.toLowerCase().replace(/[^a-z0-9\s]/g,"").split(/\s+/).filter(Boolean),r=i(`${o} ${l}`),t=a.map(e=>{const s=i(e.text||""),u=r.filter(d=>s.includes(d)).length,f=new Set([...r,...s]).size||1,p=u/f;return{id:e.id,score:p,summary:e.text.slice(0,140)}}).filter(e=>e.score>0).sort((e,s)=>s.score-e.score).slice(0,5),c=t.length>0&&t[0].score>.6,n=Math.round((1-(t.length>0?t[0].score:0))*100);return{exists:c,similar:t,feasibilityScore:n,provenance:{generatedBy:"feasibility-slice-stub",timestamp:Date.now()}}}export{m as createFeasibilitySlice};
