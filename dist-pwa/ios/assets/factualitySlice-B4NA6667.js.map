{"version":3,"file":"factualitySlice-B4NA6667.js","sources":["../../src/slices/factualitySlice.ts"],"sourcesContent":["// Factuality Slice types aligned with factuality_slice_integration.md\nexport interface Citation {\n  id: string; // evidence id or hash\n  source: string; // e.g., 'wikipedia', 'arxiv', 'user', 'ipfs'\n  snippet: string; // short excerpt used as evidence\n  score: number; // confidence/score for this citation\n}\n\nexport interface FactualityAnswer {\n  answer: string;\n  citations: string[]; // array of citation ids\n  confidence: number; // 0-1\n  refused: boolean;\n  hallucination_risk?: number; // optional 0-1\n  evidence_quality_score?: number; // optional 0-1\n}\n\nexport interface FactualitySlice {\n  response: FactualityAnswer;\n  citations: Citation[]; // detailed citation objects\n  provenance: { generatedBy: string; model?: string; timestamp: number };\n}\n\n// Simple factuality slice stub: produce the standardized schema with mock citations\nexport function createFactualitySlice(questionOrText: string, context: Record<string, unknown> = {}): FactualitySlice {\n  const answerText = questionOrText.length > 0 ? `Stub answer for: ${questionOrText}` : 'No answer';\n  const citations: Citation[] = [\n    { id: 'source:user:1', source: 'user', snippet: questionOrText.slice(0, 140), score: 0.6 },\n    { id: 'source:context:1', source: 'context', snippet: JSON.stringify(context).slice(0, 140), score: 0.4 }\n  ];\n\n  const response: FactualityAnswer = {\n    answer: answerText,\n    citations: citations.map(c => c.id),\n    confidence: 0.85,\n    refused: false,\n    hallucination_risk: 0.05,\n    evidence_quality_score: 0.6\n  };\n\n  return {\n    response,\n    citations,\n    provenance: { generatedBy: 'factuality-slice-stub', model: 'stub-v0', timestamp: Date.now() }\n  };\n}\n"],"names":["createFactualitySlice","questionOrText","context","answerText","citations","c"],"mappings":"AAwBO,SAASA,EAAsBC,EAAwBC,EAAmC,GAAqB,CACpH,MAAMC,EAAaF,EAAe,OAAS,EAAI,oBAAoBA,CAAc,GAAK,YAChFG,EAAwB,CAC5B,CAAE,GAAI,gBAAiB,OAAQ,OAAQ,QAASH,EAAe,MAAM,EAAG,GAAG,EAAG,MAAO,EAAA,EACrF,CAAE,GAAI,mBAAoB,OAAQ,UAAW,QAAS,KAAK,UAAUC,CAAO,EAAE,MAAM,EAAG,GAAG,EAAG,MAAO,EAAA,CAAI,EAY1G,MAAO,CACL,SAViC,CACjC,OAAQC,EACR,UAAWC,EAAU,IAAIC,GAAKA,EAAE,EAAE,EAClC,WAAY,IACZ,QAAS,GACT,mBAAoB,IACpB,uBAAwB,EAAA,EAKxB,UAAAD,EACA,WAAY,CAAE,YAAa,wBAAyB,MAAO,UAAW,UAAW,KAAK,IAAA,CAAI,CAAE,CAEhG"}