{"version":3,"file":"Skills-R0HP02eG.js","sources":["../../src/components/SkillCard.tsx","../../src/pages/Skills.tsx"],"sourcesContent":["import {Star, ArrowRight, Zap } from 'lucide-react';\n\ninterface SkillCardProps {\n  name: string;\n  description: string;\n  category: 'automation' | 'analysis' | 'communication' | 'computation';\n  complexity: number;\n  nrnCost: number;\n  isActive: boolean;\n}\n\nexport default function SkillCard({ name, description, category, complexity, nrnCost, isActive }: SkillCardProps) {\n  const categoryColors = {\n    automation: 'from-blue-500 to-cyan-500',\n    analysis: 'from-green-500 to-emerald-500',\n    communication: 'from-purple-500 to-violet-500',\n    computation: 'from-orange-500 to-red-500'\n  };\n\n  const categoryIcons = {\n    automation: '‚öôÔ∏è',\n    analysis: 'üìä',\n    communication: 'üí¨',\n    computation: 'üß†'\n  };\n\n  return (\n    <div className=\"relative group\">\n      <div className=\"absolute -inset-0.5 bg-gradient-to-r from-purple-600/30 to-cyan-600/30 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"></div>\n      \n      <div className=\"relative bg-slate-800/90 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50 hover:border-purple-500/50 transition-all\">\n        <div className=\"flex items-start justify-between mb-3\">\n          <div className=\"flex items-center space-x-3\">\n            <div className={`w-10 h-10 bg-gradient-to-br ${categoryColors[category]} rounded-xl flex items-center justify-center text-white font-bold text-lg`}>\n              {categoryIcons[category]}\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"font-semibold text-white\">{name}</h3>\n              <p className=\"text-xs text-slate-400 capitalize\">{category}</p>\n            </div>\n          </div>\n          \n          {isActive && (\n            <div className=\"px-2 py-1 rounded-full bg-green-500/20 border border-green-500/30\">\n              <span className=\"text-xs text-green-400 font-medium\">Active</span>\n            </div>\n          )}\n        </div>\n\n        <p className=\"text-sm text-slate-300 mb-4 line-clamp-2\">{description}</p>\n\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-1\">\n              <Star className=\"w-4 h-4 text-yellow-400\" />\n              <span className=\"text-sm text-slate-400\">{complexity}/10</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Zap className=\"w-4 h-4 text-purple-400\" />\n              <span className=\"text-sm text-slate-400\">{nrnCost} NRN</span>\n            </div>\n          </div>\n        </div>\n\n        <button className=\"w-full flex items-center justify-center space-x-2 py-2 bg-gradient-to-r from-purple-600/20 to-cyan-600/20 hover:from-purple-600/30 hover:to-cyan-600/30 rounded-xl border border-purple-500/30 text-purple-400 hover:text-purple-300 transition-all group/button\">\n          <span className=\"text-sm font-medium\">{isActive ? 'Configure' : 'Activate'}</span>\n          <ArrowRight className=\"w-4 h-4 group-hover/button:translate-x-0.5 transition-transform\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Search, Zap, Shield, Wallet, Download, Activity } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SkillCard from '../components/SkillCard';\nimport { SlidingPanel } from '../components/SlidingPanel';\nimport { NetworkStatus } from '../components/NetworkStatus';\nimport { AgentManager } from '../components/AgentManager';\nimport { CognitiveShellInterface } from '../components/CognitiveShellInterface';\nimport QRScanner from '../components/QRScanner';\nimport { Agent } from '../types/common';\n// Temporarily comment out problematic imports for testing\n// import { KNIRVRouterIntegration, LoRAAdapterData } from '../sensory-shell/KNIRVRouterIntegration';\n// import { CognitiveEngine } from '../sensory-shell/CognitiveEngine';\n\n// Temporary type definitions\ninterface LoRAAdapterData {\n  id: string;\n  name: string;\n  networkScore: number;\n  description: string;\n  version: number;\n  adapterId: string;\n  adapterName: string;\n  usageCount?: number;\n}\n\ninterface LoRASkill {\n  id: string;\n  name: string;\n  description: string;\n  category: 'analysis' | 'automation' | 'computation' | 'communication';\n  complexity: number;\n  nrnCost: number;\n  isActive: boolean;\n  adapterId?: string;\n  adapterData?: LoRAAdapterData;\n  networkScore?: number;\n  usageCount?: number;\n}\n\nexport default function Skills() {\n  const navigate = useNavigate();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [activePanels, setActivePanels] = useState<string[]>([]);\n\n  // Real LoRA adapter integration - temporarily disabled for testing\n  // const [knirvRouter, setKnirvRouter] = useState<KNIRVRouterIntegration | null>(null);\n  const [loraAdapters] = useState<LoRAAdapterData[]>([]);\n  const [skills, setSkills] = useState<LoRASkill[]>([]);\n  const [isLoading, setIsLoading] = useState(false); // Set to false to skip loading\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n\n  // Mock data for slideouts\n  const [networkConnections] = useState<{\n    [key: string]: 'connected' | 'disconnected' | 'connecting';\n  }>({\n    knirvChain: 'connected',\n    knirvGraph: 'connected',\n    knirvNexus: 'connecting',\n    knirvGateway: 'disconnected'\n  });\n\n  const [availableAgents] = useState<Agent[]>([\n    {\n      agentId: 'agent-1',\n      name: 'CodeT5-Alpha',\n      version: '1.0.0',\n      type: 'wasm' as const,\n      status: 'Available' as const,\n      nrnCost: 85,\n      capabilities: ['code-generation', 'optimization'],\n      metadata: {\n        name: 'CodeT5-Alpha',\n        version: '1.0.0',\n        description: 'Code generation agent',\n        author: 'KNIRV Team',\n        capabilities: ['code-generation', 'optimization'],\n        requirements: {\n          memory: 256,\n          cpu: 2,\n          storage: 50\n        },\n        permissions: ['code-execution', 'file-access']\n      },\n      createdAt: new Date().toISOString()\n    },\n    {\n      agentId: 'agent-2',\n      name: 'SEAL-Beta',\n      version: '1.0.0',\n      type: 'lora' as const,\n      status: 'Available' as const,\n      nrnCost: 90,\n      capabilities: ['learning', 'adaptation'],\n      metadata: {\n        name: 'SEAL-Beta',\n        version: '1.0.0',\n        description: 'Learning and adaptation agent',\n        author: 'KNIRV Team',\n        capabilities: ['learning', 'adaptation'],\n        requirements: {\n          memory: 512,\n          cpu: 4,\n          storage: 100\n        },\n        permissions: ['learning', 'adaptation']\n      },\n      createdAt: new Date().toISOString()\n    }\n  ]);\n\n  const [currentNRVs] = useState([]);\n  const [selectedNRV] = useState(null);\n  const [nrnBalance] = useState(1250);\n\n  // Initialize KNIRVROUTER and Cognitive Engine - temporarily disabled for testing\n  useEffect(() => {\n    const initializeIntegrations = async () => {\n      try {\n        // Temporarily comment out problematic initialization\n        /*\n        // Initialize KNIRVROUTER\n        const router = new KNIRVRouterIntegration({\n          routerUrl: 'http://localhost:5000',\n          graphUrl: 'http://localhost:5001',\n          oracleUrl: 'http://localhost:5002',\n          timeout: 30000,\n          retryAttempts: 3,\n          enableP2P: true,\n          enableWASM: true\n        });\n\n        setKnirvRouter(router);\n\n        // Initialize Cognitive Engine\n        const engine = new CognitiveEngine({\n          maxContextSize: 100,\n          learningRate: 0.01,\n          adaptationThreshold: 0.3,\n          skillTimeout: 30000,\n          voiceEnabled: true,\n          visualEnabled: true,\n          loraEnabled: true,\n          enhancedLoraEnabled: true,\n          hrmEnabled: true,\n          adaptiveLearningEnabled: true,\n          walletIntegrationEnabled: true,\n          chainIntegrationEnabled: true,\n          ecosystemCommunicationEnabled: true,\n        });\n\n        setCognitiveEngine(engine);\n\n        // Load LoRA adapters from network\n        await loadLoRAAdapters(router);\n        */\n\n        // Load default skills for testing\n        setSkills(getDefaultSkills());\n\n      } catch (error) {\n        console.error('Failed to initialize integrations:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeIntegrations();\n  }, []); // Remove loadLoRAAdapters dependency to fix initialization error\n\n\n  // Helper functions\n\n  const getDefaultSkills = (): LoRASkill[] => [\n    {\n      id: 'default-code-analysis',\n      name: 'Code Analysis',\n      description: 'Automated code review and optimization using advanced pattern recognition',\n      category: 'analysis' as const,\n      complexity: 8,\n      nrnCost: 25,\n      isActive: true\n    },\n    {\n      id: 'default-task-orchestration',\n      name: 'Task Orchestration',\n      description: 'Intelligent workflow automation across multiple systems and platforms',\n      category: 'automation' as const,\n      complexity: 7,\n      nrnCost: 30,\n      isActive: true\n    },\n    {\n      id: 'default-neural-synthesis',\n      name: 'Neural Synthesis',\n      description: 'Advanced data processing and pattern synthesis for complex computations',\n      category: 'computation' as const,\n      complexity: 9,\n      nrnCost: 45,\n      isActive: false\n    },\n    {\n      id: 'default-agent-communication',\n      name: 'Agent Communication',\n      description: 'Secure inter-agent messaging and coordination protocols',\n      category: 'communication' as const,\n      complexity: 6,\n      nrnCost: 20,\n      isActive: true\n    },\n    {\n      id: 'default-predictive-modeling',\n      name: 'Predictive Modeling',\n      description: 'Real-time prediction and forecasting using machine learning algorithms',\n      category: 'analysis' as const,\n      complexity: 8,\n      nrnCost: 35,\n      isActive: false\n    },\n    {\n      id: 'default-resource-optimization',\n      name: 'Resource Optimization',\n      description: 'Dynamic resource allocation and performance tuning for optimal efficiency',\n      category: 'automation' as const,\n      complexity: 7,\n      nrnCost: 28,\n      isActive: false\n    }\n  ];\n\n\n  // Filter skills based on search and category\n  const filteredSkills = skills.filter(skill => {\n    const matchesSearch = skill.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         skill.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === 'all' || skill.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  const activeSkills = skills.filter(skill => skill.isActive).length;\n  const totalNrnCost = skills.filter(skill => skill.isActive).reduce((sum, skill) => sum + skill.nrnCost, 0);\n\n  // Panel management functions\n  const closePanel = (panelId: string) => {\n    setActivePanels(prev => prev.filter(id => id !== panelId));\n  };\n\n  const openCognitiveShell = () => {\n    setActivePanels(prev =>\n      prev.includes('cognitive-shell')\n        ? prev\n        : [...prev, 'cognitive-shell']\n    );\n    setMenuOpen(false);\n  };\n\n  const toggleNetworkPanel = () => {\n    setActivePanels(prev =>\n      prev.includes('network-status')\n        ? prev.filter(id => id !== 'network-status')\n        : [...prev, 'network-status']\n    );\n    setMenuOpen(false);\n  };\n\n  const toggleAgentPanel = () => {\n    setActivePanels(prev =>\n      prev.includes('agent-management')\n        ? prev.filter(id => id !== 'agent-management')\n        : [...prev, 'agent-management']\n    );\n    setMenuOpen(false);\n  };\n\n  const handleQRScan = () => {\n    setActivePanels(prev =>\n      prev.includes('qr-scanner')\n        ? prev.filter(id => id !== 'qr-scanner')\n        : [...prev, 'qr-scanner']\n    );\n    setMenuOpen(false);\n  };\n\n  const handleCognitiveStateChange = (state: unknown) => {\n    console.log('Cognitive state changed:', state);\n  };\n\n  const handleSkillInvoked = (skillId: string, result: unknown) => {\n    console.log('Skill invoked:', skillId, result);\n  };\n\n  const handleAdaptationTriggered = (adaptation: unknown) => {\n    console.log('Adaptation triggered:', adaptation);\n  };\n\n  const handleAgentAssignment = (nrv: unknown, agent: unknown) => {\n    console.log('Agent assigned:', agent, 'to NRV:', nrv);\n  };\n\n  // Burger Menu Component\n  const BurgerMenu = ({ isOpen, onToggle, children }: {\n    isOpen: boolean;\n    onToggle: () => void;\n    children: React.ReactNode\n  }) => {\n    return (\n      <div className=\"relative\">\n        {/* Burger Button */}\n        <button\n          onClick={onToggle}\n          className=\"bg-gray-800/80 hover:bg-gray-700/80 text-white p-3 rounded-lg shadow-lg transition-all duration-200 border border-gray-600/50 backdrop-blur-sm\"\n          aria-label=\"Navigation menu\"\n        >\n          <div className=\"w-5 h-5 flex flex-col justify-center items-center\">\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 ${isOpen ? 'rotate-45 translate-y-1' : ''}`}></div>\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 mt-1 ${isOpen ? 'opacity-0' : ''}`}></div>\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 mt-1 ${isOpen ? '-rotate-45 -translate-y-1' : ''}`}></div>\n          </div>\n        </button>\n\n        {/* Menu Items */}\n        {isOpen && (\n          <div className=\"absolute top-full right-0 mt-2 w-64 bg-gray-800/95 backdrop-blur-xl rounded-lg shadow-xl border border-gray-600/50 py-2 z-50\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Menu Item Component\n  const MenuItem = ({ onClick, icon, children }: {\n    onClick: () => void;\n    icon: React.ReactNode;\n    children: React.ReactNode\n  }) => {\n    return (\n      <button\n        onClick={onClick}\n        className=\"w-full flex items-center space-x-3 px-4 py-3 text-left hover:bg-gray-700/50 transition-colors text-white\"\n      >\n        <span className=\"text-lg\">{icon}</span>\n        <span className=\"font-medium\">{children}</span>\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white relative overflow-hidden\">\n      {/* Burger Menu Navigation */}\n      <div className=\"absolute top-4 right-4 z-50\">\n        <BurgerMenu isOpen={menuOpen} onToggle={() => setMenuOpen(!menuOpen)}>\n          <MenuItem onClick={() => { navigate('/manager/udc'); setMenuOpen(false); }} icon=\"üîê\">\n            UDC\n          </MenuItem>\n          <MenuItem onClick={() => { navigate('/manager/wallet'); setMenuOpen(false); }} icon=\"üí∞\">\n            Wallet\n          </MenuItem>\n          <MenuItem onClick={handleQRScan} icon=\"üì±\">\n            QR Scanner\n          </MenuItem>\n          <MenuItem onClick={openCognitiveShell} icon=\"üß†\">\n            Cognitive Shell\n          </MenuItem>\n          <MenuItem onClick={toggleNetworkPanel} icon=\"üåê\">\n            Network Status\n          </MenuItem>\n          <MenuItem onClick={toggleAgentPanel} icon=\"ü§ñ\">\n            Agent Management\n          </MenuItem>\n          <MenuItem onClick={() => { navigate('/'); setMenuOpen(false); }} icon=\"üè†\">\n            Input Interface\n          </MenuItem>\n        </BurgerMenu>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto p-4 pb-24 overflow-y-auto h-screen\">\n        <div className=\"space-y-6\">\n          {/* Header */}\n          <div className=\"text-center py-4\">\n            <h1 className=\"text-2xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent mb-2\">\n              Skills\n            </h1>\n            <p className=\"text-gray-400 text-sm\">\n              Manage and configure your AI agent capabilities\n            </p>\n          </div>\n\n          {/* Stats */}\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-white\">{activeSkills}</div>\n              <div className=\"text-xs text-gray-400\">Active Skills</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-400\">{totalNrnCost}</div>\n              <div className=\"text-xs text-gray-400\">NRN/Hour</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-cyan-400\">{skills.length}</div>\n              <div className=\"text-xs text-gray-400\">Available</div>\n            </div>\n          </div>\n\n          {/* Search and Filter */}\n          <div className=\"space-y-3\">\n            <div className=\"flex space-x-3\">\n              <div className=\"flex-1 relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  placeholder=\"Search LoRA adapters and skills...\"\n                  className=\"w-full pl-10 pr-4 py-3 bg-gray-800/80 border border-gray-600/50 rounded-lg focus:border-blue-500/50 focus:outline-none text-white placeholder-gray-400\"\n                />\n              </div>\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                className=\"px-4 py-3 bg-gray-800/80 border border-gray-600/50 rounded-lg focus:border-blue-500/50 focus:outline-none text-white\"\n              >\n                <option value=\"all\">All Categories</option>\n                <option value=\"analysis\">Analysis</option>\n                <option value=\"automation\">Automation</option>\n                <option value=\"computation\">Computation</option>\n                <option value=\"communication\">Communication</option>\n              </select>\n              <button\n                onClick={() => {/* loadLoRAAdapters(knirvRouter!) */}}\n                disabled={true /* !knirvRouter */}\n                className=\"px-4 py-3 bg-blue-600/20 hover:bg-blue-600/30 border border-blue-500/30 rounded-lg text-blue-400 hover:text-blue-300 transition-all disabled:opacity-50\"\n              >\n                <Download className=\"w-4 h-4\" />\n              </button>\n            </div>\n\n            {/* LoRA Adapter Status */}\n            <div className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg border border-gray-600/30\">\n              <div className=\"flex items-center space-x-3\">\n                <Activity className=\"w-4 h-4 text-purple-400\" />\n                <span className=\"text-sm text-white\">LoRA Network Status</span>\n\n              </div>\n              <div className=\"flex items-center space-x-4 text-xs text-gray-400\">\n                <span>Adapters: {loraAdapters.length}</span>\n                <span>Active: {activeSkills}</span>\n                <span>Network Score: {loraAdapters.length > 0 ? (loraAdapters.reduce((sum, a) => sum + a.networkScore, 0) / loraAdapters.length).toFixed(2) : '0.00'}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Skills Grid */}\n          <div className=\"space-y-4\">\n            {isLoading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-400 mx-auto mb-4\"></div>\n                <p className=\"text-gray-400\">Loading LoRA adapters from KNIRVROUTER network...</p>\n              </div>\n            ) : filteredSkills.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Zap className=\"w-12 h-12 mx-auto mb-4 text-gray-500 opacity-50\" />\n                <p className=\"text-gray-400 mb-2\">No skills found</p>\n                <p className=\"text-sm text-gray-500\">\n                  {searchTerm || selectedCategory !== 'all'\n                    ? 'Try adjusting your search or filter criteria'\n                    : 'Connect to KNIRVROUTER network to load LoRA adapters'\n                  }\n                </p>\n              </div>\n            ) : (\n              filteredSkills.map((skill) => (\n                <div key={skill.id} className=\"relative\">\n                  <SkillCard\n                    name={skill.name}\n                    description={skill.description}\n                    category={skill.category}\n                    complexity={skill.complexity}\n                    nrnCost={skill.nrnCost}\n                    isActive={skill.isActive}\n                  />\n                  {skill.adapterData && (\n                    <div className=\"absolute top-2 right-2 flex space-x-1\">\n                      {skill.adapterData.networkScore > 0.8 && (\n                        <div className=\"px-2 py-1 bg-green-500/20 text-green-400 text-xs rounded\">\n                          High Score\n                        </div>\n                      )}\n                      <div className=\"px-2 py-1 bg-purple-500/20 text-purple-400 text-xs rounded\">\n                        LoRA\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n\n          {/* Install New Skills */}\n          <div className=\"bg-gray-800/80 border border-gray-600/50 rounded-lg p-6 text-center\">\n            <h3 className=\"text-lg font-semibold text-white mb-2\">Discover New Skills</h3>\n            <p className=\"text-sm text-gray-400 mb-4\">\n              Browse the KNIRV marketplace for cutting-edge AI capabilities\n            </p>\n            <button className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg text-white font-medium transition-all\">\n              Browse Marketplace\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Navigation */}\n      <nav className=\"fixed bottom-0 left-0 right-0 z-20 border-t border-gray-600/50 backdrop-blur-xl bg-gray-900/80\">\n        <div className=\"grid grid-cols-3 px-2 py-2\">\n          <button\n            onClick={() => navigate('/manager/skills')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/skills' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Zap className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Skills</span>\n          </button>\n          <button\n            onClick={() => navigate('/manager/udc')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/udc' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Shield className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">UDC</span>\n          </button>\n          <button\n            onClick={() => navigate('/manager/wallet')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/wallet' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Wallet className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Wallet</span>\n          </button>\n        </div>\n      </nav>\n\n      {/* Sliding Panels */}\n      <SlidingPanel\n        id=\"qr-scanner\"\n        isOpen={activePanels.includes('qr-scanner')}\n        onClose={() => closePanel('qr-scanner')}\n        title=\"QR Scanner\"\n        side=\"right\"\n      >\n        <QRScanner\n          onScan={(result) => console.log('QR Result:', result)}\n          onClose={() => closePanel('qr-scanner')}\n          isOpen={activePanels.includes('qr-scanner')}\n        />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"network-status\"\n        isOpen={activePanels.includes('network-status')}\n        onClose={() => closePanel('network-status')}\n        title=\"Network Status\"\n        side=\"right\"\n      >\n        <NetworkStatus connections={networkConnections} />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"agent-management\"\n        isOpen={activePanels.includes('agent-management')}\n        onClose={() => closePanel('agent-management')}\n        title=\"Agent Management\"\n        side=\"left\"\n      >\n        <AgentManager\n          agents={availableAgents}\n          nrvs={currentNRVs}\n          selectedNRV={selectedNRV}\n          onAgentAssignment={handleAgentAssignment}\n          nrnBalance={nrnBalance}\n        />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"cognitive-shell\"\n        isOpen={activePanels.includes('cognitive-shell')}\n        onClose={() => closePanel('cognitive-shell')}\n        title=\"Cognitive Shell\"\n        side=\"right\"\n      >\n        <CognitiveShellInterface\n          onStateChange={handleCognitiveStateChange}\n          onSkillInvoked={handleSkillInvoked}\n          onAdaptationTriggered={handleAdaptationTriggered}\n        />\n      </SlidingPanel>\n    </div>\n  );\n}\n"],"names":["SkillCard","name","description","category","complexity","nrnCost","isActive","categoryColors","categoryIcons","jsxs","jsx","Star","Zap","ArrowRight","Skills","navigate","useNavigate","menuOpen","setMenuOpen","useState","activePanels","setActivePanels","loraAdapters","skills","setSkills","isLoading","setIsLoading","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","networkConnections","availableAgents","currentNRVs","selectedNRV","nrnBalance","useEffect","getDefaultSkills","error","filteredSkills","skill","matchesSearch","matchesCategory","activeSkills","totalNrnCost","sum","closePanel","panelId","prev","id","openCognitiveShell","toggleNetworkPanel","toggleAgentPanel","handleQRScan","handleCognitiveStateChange","state","handleSkillInvoked","skillId","result","handleAdaptationTriggered","adaptation","handleAgentAssignment","nrv","agent","BurgerMenu","isOpen","onToggle","children","MenuItem","onClick","icon","Search","e","Download","Activity","Shield","Wallet","SlidingPanel","QRScanner","NetworkStatus","AgentManager","CognitiveShellInterface"],"mappings":"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"}