{"version":3,"file":"UDC-CQmSDUmW.js","sources":["../../src/pages/UDC.tsx"],"sourcesContent":["import { Shield, Key, CheckCircle, AlertTriangle, RefreshCw, Wallet, Clock, Zap} from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { SlidingPanel } from '../components/SlidingPanel';\nimport { NetworkStatus } from '../components/NetworkStatus';\nimport { AgentManager } from '../components/AgentManager';\nimport { CognitiveShellInterface } from '../components/CognitiveShellInterface';\nimport QRScanner from '../components/QRScanner';\n\nexport default function UDC() {\n  const navigate = useNavigate();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [activePanels, setActivePanels] = useState<string[]>([]);\n\n  // Mock data for slideouts\n  const [networkConnections] = useState<{\n    [key: string]: 'connected' | 'disconnected' | 'connecting';\n  }>({\n    knirvChain: 'connected',\n    knirvGraph: 'connected',\n    knirvNexus: 'connecting',\n    knirvGateway: 'disconnected'\n  });\n\n  const [availableAgents] = useState([\n    {\n      agentId: 'agent-1',\n      name: 'CodeT5-Alpha',\n      version: '1.0.0',\n      type: 'wasm' as const,\n      status: 'Available' as const,\n      nrnCost: 85,\n      capabilities: ['code-generation', 'optimization'],\n      metadata: {\n        name: 'CodeT5-Alpha',\n        version: '1.0.0',\n        description: 'Code generation and optimization agent',\n        author: 'KNIRV Labs',\n        capabilities: ['code-generation', 'optimization'],\n        requirements: {\n          memory: 256,\n          cpu: 2,\n          storage: 1024\n        },\n        permissions: ['execute', 'read', 'write']\n      },\n      createdAt: '2024-01-01T00:00:00.000Z'\n    },\n    {\n      agentId: 'agent-2',\n      name: 'SEAL-Beta',\n      version: '1.0.0',\n      type: 'wasm' as const,\n      status: 'Available' as const,\n      nrnCost: 90,\n      capabilities: ['learning', 'adaptation'],\n      metadata: {\n        name: 'SEAL-Beta',\n        version: '1.0.0',\n        description: 'Learning and adaptation agent',\n        author: 'KNIRV Labs',\n        capabilities: ['learning', 'adaptation'],\n        requirements: {\n          memory: 512,\n          cpu: 4,\n          storage: 2048\n        },\n        permissions: ['execute', 'read', 'write']\n      },\n      createdAt: '2024-01-02T00:00:00.000Z'\n    }\n  ]);\n\n  const [currentNRVs] = useState([]);\n  const [selectedNRV] = useState(null);\n  const [nrnBalance] = useState(1250);\n\n  const udc = {\n    id: 'UDC-7A8B9C2D',\n    status: 'valid' as const,\n    issuedAt: '2024-08-01T10:30:00Z',\n    expiresAt: '2024-08-08T10:30:00Z',\n    permissions: [\n      'agent.deploy',\n      'skill.activate',\n      'nrn.transfer',\n      'dten.access',\n      'wallet.connect'\n    ]\n  };\n\n  const daysUntilExpiry = Math.ceil((new Date(udc.expiresAt).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n  const isExpiringSoon = daysUntilExpiry <= 2;\n\n  const statusConfig = {\n    valid: { icon: CheckCircle, color: 'text-green-400', bg: 'bg-green-500/20', border: 'border-green-500/30' },\n    expired: { icon: AlertTriangle, color: 'text-red-400', bg: 'bg-red-500/20', border: 'border-red-500/30' },\n    revoked: { icon: AlertTriangle, color: 'text-red-400', bg: 'bg-red-500/20', border: 'border-red-500/30' },\n    pending: { icon: Clock, color: 'text-yellow-400', bg: 'bg-yellow-500/20', border: 'border-yellow-500/30' }\n  };\n\n  const config = statusConfig[udc.status];\n  const StatusIcon = config.icon;\n\n  // Panel management functions\n  const closePanel = (panelId: string) => {\n    setActivePanels(prev => prev.filter(id => id !== panelId));\n  };\n\n  const openCognitiveShell = () => {\n    setActivePanels(prev =>\n      prev.includes('cognitive-shell')\n        ? prev\n        : [...prev, 'cognitive-shell']\n    );\n    setMenuOpen(false);\n  };\n\n  const toggleNetworkPanel = () => {\n    setActivePanels(prev =>\n      prev.includes('network-status')\n        ? prev.filter(id => id !== 'network-status')\n        : [...prev, 'network-status']\n    );\n    setMenuOpen(false);\n  };\n\n  const toggleAgentPanel = () => {\n    setActivePanels(prev =>\n      prev.includes('agent-management')\n        ? prev.filter(id => id !== 'agent-management')\n        : [...prev, 'agent-management']\n    );\n    setMenuOpen(false);\n  };\n\n  const handleQRScan = () => {\n    setActivePanels(prev =>\n      prev.includes('qr-scanner')\n        ? prev.filter(id => id !== 'qr-scanner')\n        : [...prev, 'qr-scanner']\n    );\n    setMenuOpen(false);\n  };\n\n  const handleCognitiveStateChange = (state: unknown) => {\n    // This function is called by CognitiveShellInterface but we don't need to store the state\n    console.log('Cognitive state changed:', state);\n  };\n\n  const handleSkillInvoked = (skillId: string, result: unknown) => {\n    console.log('Skill invoked:', skillId, result);\n  };\n\n  const handleAdaptationTriggered = (adaptation: unknown) => {\n    console.log('Adaptation triggered:', adaptation);\n  };\n\n  const handleAgentAssignment = (nrv: unknown, agent: unknown) => {\n    console.log('Agent assigned:', agent, 'to NRV:', nrv);\n  };\n\n  // Burger Menu Component\n  interface BurgerMenuProps {\n    isOpen: boolean;\n    onToggle: () => void;\n    children: React.ReactNode;\n  }\n  \n  const BurgerMenu = ({ isOpen, onToggle, children }: BurgerMenuProps) => {\n    return (\n      <div className=\"relative\">\n        {/* Burger Button */}\n        <button\n          onClick={onToggle}\n          className=\"bg-gray-800/80 hover:bg-gray-700/80 text-white p-3 rounded-lg shadow-lg transition-all duration-200 border border-gray-600/50 backdrop-blur-sm\"\n          aria-label=\"Navigation menu\"\n        >\n          <div className=\"w-5 h-5 flex flex-col justify-center items-center\">\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 ${isOpen ? 'rotate-45 translate-y-1' : ''}`}></div>\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 mt-1 ${isOpen ? 'opacity-0' : ''}`}></div>\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 mt-1 ${isOpen ? '-rotate-45 -translate-y-1' : ''}`}></div>\n          </div>\n        </button>\n\n        {/* Menu Items */}\n        {isOpen && (\n          <div className=\"absolute top-full right-0 mt-2 w-64 bg-gray-800/95 backdrop-blur-xl rounded-lg shadow-xl border border-gray-600/50 py-2 z-50\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Menu Item Component\n  interface MenuItemProps {\n    onClick: () => void;\n    icon: React.ReactNode;\n    children: React.ReactNode;\n  }\n  \n  const MenuItem = ({ onClick, icon, children }: MenuItemProps) => {\n    return (\n      <button\n        onClick={onClick}\n        className=\"w-full flex items-center space-x-3 px-4 py-3 text-left hover:bg-gray-700/50 transition-colors text-white\"\n      >\n        <span className=\"text-lg\">{icon}</span>\n        <span className=\"font-medium\">{children}</span>\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white relative overflow-hidden\">\n      {/* Burger Menu Navigation */}\n      <div className=\"absolute top-4 right-4 z-50\">\n        <BurgerMenu isOpen={menuOpen} onToggle={() => setMenuOpen(!menuOpen)}>\n          <MenuItem onClick={() => { navigate('/manager/skills'); setMenuOpen(false); }} icon=\"⚡\">\n            Skills\n          </MenuItem>\n          <MenuItem onClick={() => { navigate('/manager/wallet'); setMenuOpen(false); }} icon=\"💰\">\n            Wallet\n          </MenuItem>\n          <MenuItem onClick={handleQRScan} icon=\"📱\">\n            QR Scanner\n          </MenuItem>\n          <MenuItem onClick={openCognitiveShell} icon=\"🧠\">\n            Cognitive Shell\n          </MenuItem>\n          <MenuItem onClick={toggleNetworkPanel} icon=\"🌐\">\n            Network Status\n          </MenuItem>\n          <MenuItem onClick={toggleAgentPanel} icon=\"🤖\">\n            Agent Management\n          </MenuItem>\n          <MenuItem onClick={() => { navigate('/'); setMenuOpen(false); }} icon=\"🏠\">\n            Input Interface\n          </MenuItem>\n        </BurgerMenu>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto p-4 pb-24 overflow-y-auto h-screen\">\n        <div className=\"space-y-6\">\n          {/* Header */}\n          <div className=\"text-center py-4\">\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent mb-2\">\n              User Delegation Certificate\n            </h2>\n            <p className=\"text-gray-400 text-sm\">\n              Your authorized access credentials for the D-TEN network\n            </p>\n          </div>\n\n          {/* Certificate Status */}\n          <div className={`bg-gray-800/80 border rounded-lg p-6 ${isExpiringSoon ? 'border-red-500/30' : 'border-green-500/30'}`}>\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className={`w-12 h-12 ${config.bg} ${config.border} border rounded-xl flex items-center justify-center`}>\n                  <StatusIcon className={`w-6 h-6 ${config.color}`} />\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-bold text-white\">Certificate Active</h3>\n                  <p className={`text-sm ${config.color} capitalize`}>{udc.status}</p>\n                </div>\n              </div>\n              \n              {isExpiringSoon && (\n                <div className=\"px-3 py-1 rounded-full bg-red-500/20 border border-red-500/30\">\n                  <span className=\"text-xs text-red-400 font-medium\">Expires Soon</span>\n                </div>\n              )}\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-400\">Certificate ID</p>\n                  <p className=\"text-sm font-mono text-white\">{udc.id}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-400\">Expires In</p>\n                  <p className={`text-sm font-semibold ${isExpiringSoon ? 'text-red-400' : 'text-green-400'}`}>\n                    {daysUntilExpiry} days\n                  </p>\n                </div>\n              </div>\n\n              <div>\n                <p className=\"text-sm text-gray-400 mb-2\">Valid Until</p>\n                <p className=\"text-sm text-white\">\n                  {new Date(udc.expiresAt).toLocaleDateString()} at {new Date(udc.expiresAt).toLocaleTimeString()}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Permissions */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-white mb-4\">Granted Permissions</h3>\n            <div className=\"space-y-3\">\n              {udc.permissions.map((permission, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center border border-blue-500/20\">\n                      <Key className=\"w-4 h-4 text-blue-400\" />\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-white\">{permission}</p>\n                      <p className=\"text-xs text-gray-400\">Full access granted</p>\n                    </div>\n                  </div>\n                  <CheckCircle className=\"w-5 h-5 text-green-400\" />\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"space-y-3\">\n            <button className=\"w-full flex items-center justify-center space-x-3 py-4 bg-blue-600 hover:bg-blue-700 rounded-lg text-white font-semibold transition-all\">\n              <RefreshCw className=\"w-5 h-5\" />\n              <span>Renew Certificate</span>\n            </button>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <button className=\"flex items-center justify-center space-x-2 py-3 bg-gray-800/80 border border-gray-600/50 rounded-lg hover:border-blue-500/50 text-gray-300 hover:text-white transition-all\">\n                <Shield className=\"w-4 h-4\" />\n                <span className=\"text-sm\">View Details</span>\n              </button>\n              <button className=\"flex items-center justify-center space-x-2 py-3 bg-gray-800/80 border border-gray-600/50 rounded-lg hover:border-blue-500/50 text-gray-300 hover:text-white transition-all\">\n                <Key className=\"w-4 h-4\" />\n                <span className=\"text-sm\">Export Key</span>\n              </button>\n            </div>\n          </div>\n\n          {/* Certificate Chain */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-white mb-4\">Certificate Chain</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center space-x-3 p-3 bg-gray-800/30 border border-gray-600/30 rounded-lg\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                <span className=\"text-sm text-gray-300\">KNIRV Root CA</span>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-gray-800/30 border border-gray-600/30 rounded-lg ml-4\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                <span className=\"text-sm text-gray-300\">D-TEN Intermediate CA</span>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-gray-800/30 border border-gray-600/30 rounded-lg ml-8\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                <span className=\"text-sm text-gray-300\">User Certificate</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Navigation */}\n      <nav className=\"fixed bottom-0 left-0 right-0 z-20 border-t border-gray-600/50 backdrop-blur-xl bg-gray-900/80\">\n        <div className=\"grid grid-cols-3 px-2 py-2\">\n          <button\n            onClick={() => navigate('/manager/skills')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/skills' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Zap className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Skills</span>\n          </button>\n          <button\n            onClick={() => navigate('/manager/udc')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/udc' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Shield className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">UDC</span>\n          </button>\n          <button\n            onClick={() => navigate('/manager/wallet')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/wallet' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Wallet className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Wallet</span>\n          </button>\n        </div>\n      </nav>\n\n      {/* Sliding Panels */}\n      <SlidingPanel\n        id=\"qr-scanner\"\n        isOpen={activePanels.includes('qr-scanner')}\n        onClose={() => closePanel('qr-scanner')}\n        title=\"QR Scanner\"\n        side=\"right\"\n      >\n        <QRScanner\n          onScan={(result) => console.log('QR Result:', result)}\n          onClose={() => closePanel('qr-scanner')}\n          isOpen={activePanels.includes('qr-scanner')}\n        />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"network-status\"\n        isOpen={activePanels.includes('network-status')}\n        onClose={() => closePanel('network-status')}\n        title=\"Network Status\"\n        side=\"right\"\n      >\n        <NetworkStatus connections={networkConnections} />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"agent-management\"\n        isOpen={activePanels.includes('agent-management')}\n        onClose={() => closePanel('agent-management')}\n        title=\"Agent Management\"\n        side=\"left\"\n      >\n        <AgentManager\n          agents={availableAgents}\n          nrvs={currentNRVs}\n          selectedNRV={selectedNRV}\n          onAgentAssignment={handleAgentAssignment}\n          nrnBalance={nrnBalance}\n        />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"cognitive-shell\"\n        isOpen={activePanels.includes('cognitive-shell')}\n        onClose={() => closePanel('cognitive-shell')}\n        title=\"Cognitive Shell\"\n        side=\"right\"\n      >\n        <CognitiveShellInterface\n          onStateChange={handleCognitiveStateChange}\n          onSkillInvoked={handleSkillInvoked}\n          onAdaptationTriggered={handleAdaptationTriggered}\n        />\n      </SlidingPanel>\n    </div>\n  );\n}\n"],"names":["UDC","navigate","useNavigate","menuOpen","setMenuOpen","useState","activePanels","setActivePanels","networkConnections","availableAgents","currentNRVs","selectedNRV","nrnBalance","udc","daysUntilExpiry","isExpiringSoon","config","CheckCircle","AlertTriangle","Clock","StatusIcon","closePanel","panelId","prev","id","openCognitiveShell","toggleNetworkPanel","toggleAgentPanel","handleQRScan","handleCognitiveStateChange","state","handleSkillInvoked","skillId","result","handleAdaptationTriggered","adaptation","handleAgentAssignment","nrv","agent","BurgerMenu","isOpen","onToggle","children","jsxs","jsx","MenuItem","onClick","icon","permission","index","Key","RefreshCw","Shield","Zap","Wallet","SlidingPanel","QRScanner","NetworkStatus","AgentManager","CognitiveShellInterface"],"mappings":"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"}