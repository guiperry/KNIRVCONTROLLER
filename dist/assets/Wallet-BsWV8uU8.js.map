{"version":3,"file":"Wallet-BsWV8uU8.js","sources":["../../src/services/WebSocketService.ts","../../src/pages/Wallet.tsx"],"sourcesContent":["/**\n * WebSocket Service\n * Handles real-time data synchronization and event streaming\n */\n\nexport interface WebSocketEvent {\n  type: string;\n  data: unknown;\n  timestamp: number;\n}\n\nexport interface WebSocketConnectionStatus {\n  connected: boolean;\n  url?: string;\n  lastPing?: number;\n  reconnectAttempts?: number;\n}\n\nexport class WebSocketService {\n  private ws: WebSocket | null = null;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectDelay = 1000;\n  private url: string;\n  private isConnecting = false;\n  private connectionStatus: WebSocketConnectionStatus = { connected: false };\n  private eventListeners: Map<string, ((event: WebSocketEvent) => void)[]> = new Map();\n  private heartbeatInterval: NodeJS.Timeout | number | null = null;\n\n  constructor(url: string = this.detectWebSocketURL()) {\n    this.url = url;\n  }\n\n  /**\n   * Auto-detect the appropriate WebSocket URL based on environment\n   */\n  private detectWebSocketURL(): string {\n    if (typeof window !== 'undefined' && window.location) {\n      if (window.location.hostname === 'localhost') {\n        return 'ws://localhost:3001/ws'; // Local development\n      }\n      if (window.location.hostname.includes('testnet')) {\n        return 'wss://api-testnet.knirv.com/ws'; // Testnet\n      }\n    }\n\n    // Production fallback\n    return 'wss://api.knirv.com/ws';\n  }\n\n  /**\n   * Connect to WebSocket server\n   */\n  async connect(): Promise<boolean> {\n    if (this.isConnecting || this.connectionStatus.connected) {\n      return this.connectionStatus.connected;\n    }\n\n    this.isConnecting = true;\n\n    return new Promise((resolve) => {\n      try {\n        this.ws = new WebSocket(this.url);\n        this.ws.onopen = this.handleOpen.bind(this);\n        this.ws.onmessage = this.handleMessage.bind(this);\n        this.ws.onclose = this.handleClose.bind(this);\n        this.ws.onerror = this.handleError.bind(this);\n\n        // Timeout for connection attempt\n        setTimeout(() => {\n          if (!this.connectionStatus.connected) {\n            this.isConnecting = false;\n            resolve(false);\n          }\n        }, 10000);\n\n        // Override the callback-based resolve with proper handling\n        this.ws.onopen = () => {\n          this.isConnecting = false;\n          resolve(true);\n        };\n\n      } catch (error) {\n        console.error('WebSocket connection error:', error);\n        this.isConnecting = false;\n        resolve(false);\n      }\n    });\n  }\n\n  /**\n   * Disconnect from WebSocket server\n   */\n  disconnect(): void {\n    this.isConnecting = false;\n\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n\n    if (this.ws) {\n      this.ws.close(1000, 'Client disconnect');\n      this.ws = null;\n    }\n\n    this.connectionStatus = { connected: false };\n  }\n\n  /**\n   * Send a message to the WebSocket server\n   */\n  send(type: string, data: unknown = {}): boolean {\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      return false;\n    }\n\n    try {\n      const message = JSON.stringify({\n        type,\n        data,\n        timestamp: Date.now()\n      });\n      this.ws.send(message);\n      return true;\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Subscribe to a specific event type\n   */\n  on(eventType: string, callback: (event: WebSocketEvent) => void): void {\n    if (!this.eventListeners.has(eventType)) {\n      this.eventListeners.set(eventType, []);\n    }\n    this.eventListeners.get(eventType)!.push(callback);\n  }\n\n  /**\n   * Unsubscribe from a specific event type\n   */\n  off(eventType: string, callback?: (event: WebSocketEvent) => void): void {\n    if (!this.eventListeners.has(eventType)) {\n      return;\n    }\n\n    const listeners = this.eventListeners.get(eventType)!;\n    if (callback) {\n      const index = listeners.indexOf(callback);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    } else {\n      listeners.length = 0;\n    }\n  }\n\n  /**\n   * Get current connection status\n   */\n  getConnectionStatus(): WebSocketConnectionStatus {\n    return { ...this.connectionStatus };\n  }\n\n  /**\n   * Update WebSocket URL (useful for environment switching)\n   */\n  setURL(url: string): void {\n    this.url = url;\n    if (this.connectionStatus.connected) {\n      this.disconnect();\n      this.connect();\n    }\n  }\n\n  /**\n   * Handle WebSocket open event\n   */\n  private handleOpen(): void {\n    console.log('WebSocket connected to:', this.url);\n    this.connectionStatus = {\n      connected: true,\n      url: this.url,\n      lastPing: Date.now(),\n      reconnectAttempts: 0\n    };\n    this.reconnectAttempts = 0;\n\n    // Start heartbeat\n    this.startHeartbeat();\n\n    // Emit connection event\n    this.emitEvent('connection:established', { connected: true });\n  }\n\n  /**\n   * Handle WebSocket message event\n   */\n  private handleMessage(event: MessageEvent): void {\n    try {\n      const message: WebSocketEvent = JSON.parse(event.data);\n      this.emitEvent(message.type, message.data);\n\n      // Update ping time for heartbeat\n      if (message.type === 'heartbeat:pong') {\n        this.connectionStatus.lastPing = Date.now();\n      }\n    } catch (error) {\n      console.error('Error parsing WebSocket message:', error);\n    }\n  }\n\n  /**\n   * Handle WebSocket close event\n   */\n  private handleClose(event: CloseEvent): void {\n    console.log('WebSocket disconnected:', event.code, event.reason);\n    this.connectionStatus = { connected: false };\n    this.ws = null;\n\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n\n    // Emit disconnection event\n    this.emitEvent('connection:lost', { code: event.code, reason: event.reason });\n\n    // Attempt to reconnect if not a clean close\n    if (event.code !== 1000 && this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.attemptReconnect();\n    }\n  }\n\n  /**\n   * Handle WebSocket error event\n   */\n  private handleError(event: Event): void {\n    console.error('WebSocket error:', event);\n    this.emitEvent('connection:error', { error: event });\n  }\n\n  /**\n   * Start heartbeat mechanism\n   */\n  private startHeartbeat(): void {\n    this.heartbeatInterval = setInterval(() => {\n      if (this.connectionStatus.connected) {\n        this.send('heartbeat:ping', { timestamp: Date.now() });\n      }\n    }, 30000); // 30 seconds\n  }\n\n  /**\n   * Attempt to reconnect to WebSocket server\n   */\n  private attemptReconnect(): void {\n    this.reconnectAttempts++;\n    const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1); // Exponential backoff\n\n    console.log(`Attempting WebSocket reconnect ${this.reconnectAttempts}/${this.maxReconnectAttempts} in ${delay}ms`);\n\n    setTimeout(() => {\n      if (!this.connectionStatus.connected && this.reconnectAttempts < this.maxReconnectAttempts) {\n        this.connect();\n      }\n    }, delay);\n  }\n\n  /**\n   * Emit event to all registered listeners\n   */\n  private emitEvent(type: string, data: unknown): void {\n    const listeners = this.eventListeners.get(type);\n    if (listeners) {\n      const event: WebSocketEvent = {\n        type,\n        data,\n        timestamp: Date.now()\n      };\n\n      listeners.forEach(callback => {\n        try {\n          callback(event);\n        } catch (error) {\n          console.error('Error in WebSocket event listener:', error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Subscribe to agent-related events\n   */\n  subscribeToAgent(agentId: string): void {\n    this.on(`agent:${agentId}:status`, (event) => {\n      console.log('Agent status update:', event.data);\n    });\n\n    this.on(`agent:${agentId}:performance`, (event) => {\n      console.log('Agent performance update:', event.data);\n    });\n  }\n\n  /**\n   * Subscribe to wallet-related events\n   */\n  subscribeToWallet(accountId: string): void {\n    this.on(`wallet:${accountId}:transaction`, (event) => {\n      console.log('Wallet transaction update:', event.data);\n    });\n\n    this.on(`wallet:${accountId}:balance`, (event) => {\n      console.log('Wallet balance update:', event.data);\n    });\n  }\n\n  /**\n   * Subscribe to analytics-related events\n   */\n  subscribeToAnalytics(dashboardId: string): void {\n    this.on(`analytics:${dashboardId}:metrics`, (event) => {\n      console.log('Analytics metrics update:', event.data);\n    });\n  }\n\n  /**\n   * Subscribe to task-related events\n   */\n  subscribeToTask(taskId: string): void {\n    this.on(`task:${taskId}:status`, (event) => {\n      console.log('Task status update:', event.data);\n    });\n\n    this.on(`task:${taskId}:progress`, (event) => {\n      console.log('Task progress update:', event.data);\n    });\n  }\n\n  /**\n   * Unsubscribe from all events for a specific entity\n   */\n  unsubscribeFromEntity(entityType: string, entityId: string): void {\n    const prefix = `${entityType}:${entityId}:`;\n    const eventsToRemove: string[] = [];\n\n    this.eventListeners.forEach((listeners, eventType) => {\n      if (eventType.startsWith(prefix)) {\n        eventsToRemove.push(eventType);\n      }\n    });\n\n    eventsToRemove.forEach(eventType => {\n      this.eventListeners.delete(eventType);\n    });\n  }\n}\n\n// Export singleton instance\nexport const webSocketService = new WebSocketService();\n\n// Export convenience functions for common subscriptions\nexport const subscribeToWallet = (accountId: string) => webSocketService.subscribeToWallet(accountId);\nexport const subscribeToAgent = (agentId: string) => webSocketService.subscribeToAgent(agentId);\nexport const subscribeToAnalytics = (dashboardId?: string) => webSocketService.subscribeToAnalytics(dashboardId || 'default');\nexport const subscribeToTask = (taskId: string) => webSocketService.subscribeToTask(taskId);\n","import { Wallet, ArrowUpRight, ArrowDownLeft, Zap, TrendingUp, Copy, Shield, QrCode, X, CheckCircle } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SlidingPanel } from '@components/SlidingPanel';\nimport { NetworkStatus } from '@components/NetworkStatus';\nimport { AgentManager } from '@components/AgentManager';\nimport { CognitiveShellInterface } from '@components/CognitiveShellInterface';\nimport QRScanner from '@components/QRScanner';\nimport { apiService, isAPIError, getErrorMessage } from '../services/APIService';\nimport { webSocketService, subscribeToWallet } from '../services/WebSocketService';\n\nexport default function WalletPage() {\n  const navigate = useNavigate();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [activePanels, setActivePanels] = useState<string[]>([]);\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [showAddFunds, setShowAddFunds] = useState(false);\n  const [showSendNRN, setShowSendNRN] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(false);\n  const [cognitiveState, setCognitiveState] = useState<{ mode?: string; isActive?: boolean; timestamp?: number } | null>(null);\n  const [cognitiveMode, setCognitiveMode] = useState(false);\n\n  // Wallet operation states\n  const [addFundsLoading, setAddFundsLoading] = useState(false);\n  const [sendNRNLoading, setSendNRNLoading] = useState(false);\n  const [addFundsError, setAddFundsError] = useState<string | null>(null);\n  const [sendNRNError, setSendNRNError] = useState<string | null>(null);\n  const [addFundsSuccess, setAddFundsSuccess] = useState(false);\n  const [sendNRNSuccess, setSendNRNSuccess] = useState(false);\n\n  // Form states\n  const [addFundsAmount, setAddFundsAmount] = useState('');\n  const [addFundsMethod, setAddFundsMethod] = useState('Credit Card');\n  const [sendNRNAddress, setSendNRNAddress] = useState('');\n  const [sendNRNAmount, setSendNRNAmount] = useState('');\n  const [sendNRNNote, setSendNRNNote] = useState('');\n\n  // Mock data for slideouts\n  const [networkConnections] = useState<{\n    [key: string]: 'connected' | 'disconnected' | 'connecting';\n  }>({\n    knirvChain: 'connected',\n    knirvGraph: 'connected',\n    knirvNexus: 'connecting',\n    knirvGateway: 'disconnected'\n  });\n\n  const [availableAgents] = useState([\n    {\n      agentId: 'agent-1',\n      name: 'CodeT5-Alpha',\n      version: '1.0.0',\n      type: 'wasm' as const,\n      status: 'Available' as const,\n      capabilities: ['code-generation', 'optimization'],\n      nrnCost: 85,\n      metadata: {\n        name: 'CodeT5-Alpha',\n        version: '1.0.0',\n        description: 'Code generation and optimization agent',\n        author: 'KNIRV Network',\n        capabilities: ['code-generation', 'optimization'],\n        requirements: { memory: 512, cpu: 2, storage: 100 },\n        permissions: ['read', 'write']\n      },\n      createdAt: new Date().toISOString()\n    },\n    {\n      agentId: 'agent-2',\n      name: 'SEAL-Beta',\n      version: '1.0.0',\n      type: 'lora' as const,\n      status: 'Available' as const,\n      capabilities: ['learning', 'adaptation'],\n      nrnCost: 90,\n      metadata: {\n        name: 'SEAL-Beta',\n        version: '1.0.0',\n        description: 'Learning and adaptation agent',\n        author: 'KNIRV Network',\n        capabilities: ['learning', 'adaptation'],\n        requirements: { memory: 256, cpu: 1, storage: 50 },\n        permissions: ['read']\n      },\n      createdAt: new Date().toISOString()\n    }\n  ]);\n\n  const [currentNRVs] = useState([]);\n  const [selectedNRV] = useState(null);\n  const [nrnBalance] = useState(1250);\n\n  const walletData = {\n    nrnBalance: 1247,\n    usdValue: 312.75,\n    change24h: 5.2,\n    walletAddress: '0x742d35Cc6aa34567...8B9fA2e1C4D'\n  };\n\n  // WebSocket subscription\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      const connected = await webSocketService.connect();\n      if (connected) {\n        // Subscribe to wallet updates\n        subscribeToWallet(walletData.walletAddress);\n      }\n    };\n\n    connectWebSocket();\n\n    return () => {\n      webSocketService.disconnect();\n    };\n  }, [walletData.walletAddress]);\n\n  const transactions = [\n    {\n      id: '1',\n      type: 'consumption' as const,\n      amount: -25,\n      description: 'Code Analysis Skill',\n      timestamp: '2024-08-06T01:15:00Z',\n      agentName: 'CodeT5-Alpha'\n    },\n    {\n      id: '2',\n      type: 'reward' as const,\n      amount: 50,\n      description: 'Task completion bonus',\n      timestamp: '2024-08-06T00:45:00Z',\n      agentName: 'SEAL-Beta'\n    },\n    {\n      id: '3',\n      type: 'consumption' as const,\n      amount: -30,\n      description: 'Task Orchestration',\n      timestamp: '2024-08-05T23:20:00Z',\n      agentName: 'CodeT5-Alpha'\n    },\n    {\n      id: '4',\n      type: 'transfer' as const,\n      amount: 100,\n      description: 'Wallet funding',\n      timestamp: '2024-08-05T22:10:00Z',\n      agentName: null\n    }\n  ];\n\n  // Panel management functions\n  const closePanel = (panelId: string) => {\n    setActivePanels(prev => prev.filter(id => id !== panelId));\n  };\n\n  const openCognitiveShell = () => {\n    // Toggle cognitive mode when opening shell\n    setCognitiveMode(true);\n    setCognitiveState({\n      isActive: true,\n      timestamp: Date.now(),\n      mode: 'interactive'\n    });\n\n    setActivePanels(prev =>\n      prev.includes('cognitive-shell')\n        ? prev\n        : [...prev, 'cognitive-shell']\n    );\n    setMenuOpen(false);\n  };\n\n  const toggleNetworkPanel = () => {\n    setActivePanels(prev =>\n      prev.includes('network-status')\n        ? prev.filter(id => id !== 'network-status')\n        : [...prev, 'network-status']\n    );\n    setMenuOpen(false);\n  };\n\n  const toggleAgentPanel = () => {\n    setActivePanels(prev =>\n      prev.includes('agent-management')\n        ? prev.filter(id => id !== 'agent-management')\n        : [...prev, 'agent-management']\n    );\n    setMenuOpen(false);\n  };\n\n  // Wallet functionality handlers\n  const handleCopyAddress = async () => {\n    const walletAddress = walletData.walletAddress;\n    try {\n      await navigator.clipboard.writeText(walletAddress);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy address:', err);\n    }\n  };\n\n  const handleShowQRCode = () => {\n    setShowQRCode(true);\n  };\n\n  const handleAddFunds = () => {\n    setShowAddFunds(true);\n  };\n\n  const handleSendNRN = () => {\n    setShowSendNRN(true);\n  };\n\n  // Add funds functionality\n  const executeAddFunds = async () => {\n    if (!addFundsAmount || parseFloat(addFundsAmount) <= 0) {\n      setAddFundsError('Please enter a valid amount');\n      return;\n    }\n\n    setAddFundsLoading(true);\n    setAddFundsError(null);\n\n    try {\n      const response = await apiService.post('/wallet/add-funds', {\n        amount: addFundsAmount,\n        paymentMethod: addFundsMethod,\n        currency: 'USD'\n      });\n\n      if (isAPIError(response)) {\n        setAddFundsError(getErrorMessage(response));\n        return;\n      }\n\n      setAddFundsSuccess(true);\n      setTimeout(() => {\n        setShowAddFunds(false);\n        setAddFundsSuccess(false);\n        setAddFundsAmount('');\n      }, 2000);\n\n    } catch {\n      setAddFundsError('Failed to add funds. Please try again.');\n    } finally {\n      setAddFundsLoading(false);\n    }\n  };\n\n  // Send NRN functionality\n  const executeSendNRN = async () => {\n    if (!sendNRNAddress || !sendNRNAmount || parseFloat(sendNRNAmount) <= 0) {\n      setSendNRNError('Please provide recipient address and valid amount');\n      return;\n    }\n\n    if (parseFloat(sendNRNAmount) > walletData.nrnBalance) {\n      setSendNRNError('Insufficient balance');\n      return;\n    }\n\n    setSendNRNLoading(true);\n    setSendNRNError(null);\n\n    try {\n      const response = await apiService.post('/wallet/send-transaction', {\n        recipient: sendNRNAddress,\n        amount: sendNRNAmount,\n        note: sendNRNNote || undefined\n      });\n\n      if (isAPIError(response)) {\n        setSendNRNError(getErrorMessage(response));\n        return;\n      }\n\n      setSendNRNSuccess(true);\n      setTimeout(() => {\n        setShowSendNRN(false);\n        setSendNRNSuccess(false);\n        setSendNRNAddress('');\n        setSendNRNAmount('');\n        setSendNRNNote('');\n      }, 2000);\n\n    } catch {\n      setSendNRNError('Failed to send NRN. Please try again.');\n    } finally {\n      setSendNRNLoading(false);\n    }\n  };\n\n  const handleQRScan = () => {\n    setActivePanels(prev =>\n      prev.includes('qr-scanner')\n        ? prev.filter(id => id !== 'qr-scanner')\n        : [...prev, 'qr-scanner']\n    );\n    setMenuOpen(false);\n  };\n\n  const handleCognitiveStateChange = (state: unknown) => {\n    setCognitiveState(state as { mode?: string; isActive?: boolean; timestamp?: number } | null);\n    if (state && typeof state === 'object' && 'status' in state) {\n      const stateObj = state as { status: string };\n      setCognitiveMode(stateObj.status === 'active' || stateObj.status === 'learning');\n    }\n  };\n\n  const handleSkillInvoked = (skillId: string, result: unknown) => {\n    console.log('Skill invoked:', skillId, result);\n  };\n\n  const handleAdaptationTriggered = (adaptation: unknown) => {\n    console.log('Adaptation triggered:', adaptation);\n  };\n\n  const handleAgentAssignment = (nrv: unknown, agent: unknown) => {\n    console.log('Agent assigned:', agent, 'to NRV:', nrv);\n  };\n\n  // Burger Menu Component\n  const BurgerMenu = ({ isOpen, onToggle, children }: { isOpen: boolean; onToggle: () => void; children: React.ReactNode }) => {\n    return (\n      <div className=\"relative\">\n        {/* Burger Button */}\n        <button\n          onClick={onToggle}\n          className=\"bg-gray-800/80 hover:bg-gray-700/80 text-white p-3 rounded-lg shadow-lg transition-all duration-200 border border-gray-600/50 backdrop-blur-sm\"\n          aria-label=\"Navigation menu\"\n        >\n          <div className=\"w-5 h-5 flex flex-col justify-center items-center\">\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 ${isOpen ? 'rotate-45 translate-y-1' : ''}`}></div>\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 mt-1 ${isOpen ? 'opacity-0' : ''}`}></div>\n            <div className={`w-5 h-0.5 bg-white transition-all duration-300 mt-1 ${isOpen ? '-rotate-45 -translate-y-1' : ''}`}></div>\n          </div>\n        </button>\n\n        {/* Menu Items */}\n        {isOpen && (\n          <div className=\"absolute top-full right-0 mt-2 w-64 bg-gray-800/95 backdrop-blur-xl rounded-lg shadow-xl border border-gray-600/50 py-2 z-50\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Menu Item Component\n  const MenuItem = ({ onClick, icon, children }: { onClick: () => void; icon: React.ReactNode; children: React.ReactNode }) => {\n    return (\n      <button\n        onClick={onClick}\n        className=\"w-full flex items-center space-x-3 px-4 py-3 text-left hover:bg-gray-700/50 transition-colors text-white\"\n      >\n        <span className=\"text-lg\">{icon}</span>\n        <span className=\"font-medium\">{children}</span>\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white relative overflow-hidden\">\n      {/* Burger Menu Navigation */}\n      <div className=\"absolute top-4 right-4 z-50\">\n        <BurgerMenu isOpen={menuOpen} onToggle={() => setMenuOpen(!menuOpen)}>\n          <MenuItem onClick={() => { navigate('/manager/skills'); setMenuOpen(false); }} icon=\"⚡\">\n            Skills\n          </MenuItem>\n          <MenuItem onClick={() => { navigate('/manager/udc'); setMenuOpen(false); }} icon=\"🔐\">\n            UDC\n          </MenuItem>\n          <MenuItem onClick={handleQRScan} icon=\"📱\">\n            QR Scanner\n          </MenuItem>\n          <MenuItem onClick={openCognitiveShell} icon=\"🧠\">\n            Cognitive Shell\n          </MenuItem>\n          <MenuItem onClick={toggleNetworkPanel} icon=\"🌐\">\n            Network Status\n          </MenuItem>\n          <MenuItem onClick={toggleAgentPanel} icon=\"🤖\">\n            Agent Management\n          </MenuItem>\n          <MenuItem onClick={() => { navigate('/'); setMenuOpen(false); }} icon=\"🏠\">\n            Input Interface\n          </MenuItem>\n        </BurgerMenu>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto p-4 pb-24 overflow-y-auto h-screen\">\n        <div className=\"space-y-6\">\n          {/* Header */}\n        <div className=\"text-center py-4\">\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent mb-2\">\n              KNIRV Wallet\n            </h2>\n            <p className=\"text-gray-400 text-sm\">\n              Manage your NRN tokens and transaction history\n            </p>\n          </div>\n\n          {/* Balance Card */}\n          <div className=\"bg-gray-800/80 border border-gray-600/50 rounded-lg p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center\">\n                  <Zap className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-white\">NRN Balance</h3>\n                  <p className=\"text-sm text-gray-400\">Neural Resource Network</p>\n                </div>\n              </div>\n              \n              <div className={walletData.change24h >= 0 ? 'px-3 py-1 rounded-full bg-green-500/20 border border-green-500/30' : 'px-3 py-1 rounded-full bg-red-500/20 border border-red-500/30'}>\n                <div className=\"flex items-center space-x-1\">\n                  <TrendingUp className={walletData.change24h >= 0 ? 'w-3 h-3 text-green-400' : 'w-3 h-3 text-red-400 rotate-180'} />\n                  <span className={walletData.change24h >= 0 ? 'text-xs font-medium text-green-400' : 'text-xs font-medium text-red-400'}>\n                    {walletData.change24h >= 0 ? '+' : ''}{walletData.change24h}%\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <div className=\"text-3xl font-bold text-white\">\n                {walletData.nrnBalance.toLocaleString()} NRN\n              </div>\n              <div className=\"text-lg text-gray-300\">\n                ≈ ${walletData.usdValue.toFixed(2)} USD\n              </div>\n\n              {/* Cognitive Status Indicator */}\n              {cognitiveMode && (\n                <div className=\"flex items-center space-x-2 mt-2 px-2 py-1 bg-purple-600/20 border border-purple-500/30 rounded-lg\">\n                  <div className=\"w-2 h-2 bg-purple-400 rounded-full animate-pulse\"></div>\n                  <span className=\"text-xs text-purple-400\">\n                    Cognitive Mode: {cognitiveState?.mode || 'active'} |\n                    Status: {cognitiveState?.isActive ? 'online' : 'offline'}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Wallet Address */}\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-semibold text-white\">Wallet Address</h3>\n            <div className=\"flex items-center space-x-3 p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"w-10 h-10 bg-blue-500/20 rounded-lg flex items-center justify-center border border-blue-500/20\">\n                <Wallet className=\"w-5 h-5 text-blue-400\" />\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"font-mono text-sm text-white\">{walletData.walletAddress}</p>\n                <p className=\"text-xs text-gray-400\">KNIRV Network</p>\n              </div>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={handleCopyAddress}\n                  className=\"p-2 hover:bg-gray-700/50 rounded-lg text-gray-400 hover:text-white transition-all\"\n                  title=\"Copy Address\"\n                >\n                  {copySuccess ? <CheckCircle className=\"w-4 h-4 text-green-400\" /> : <Copy className=\"w-4 h-4\" />}\n                </button>\n                <button\n                  onClick={handleShowQRCode}\n                  className=\"p-2 hover:bg-gray-700/50 rounded-lg text-gray-400 hover:text-white transition-all\"\n                  title=\"Show QR Code\"\n                >\n                  <QrCode className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"grid grid-cols-2 gap-3\">\n            <button\n              onClick={handleAddFunds}\n              className=\"flex items-center justify-center space-x-3 py-4 bg-green-600/20 hover:bg-green-600/30 border border-green-500/30 rounded-lg text-green-400 hover:text-green-300 transition-all\"\n            >\n              <ArrowDownLeft className=\"w-5 h-5\" />\n              <span className=\"font-medium\">Add Funds</span>\n            </button>\n            <button\n              onClick={handleSendNRN}\n              className=\"flex items-center justify-center space-x-3 py-4 bg-blue-600/20 hover:bg-blue-600/30 border border-blue-500/30 rounded-lg text-blue-400 hover:text-blue-300 transition-all\"\n            >\n              <ArrowUpRight className=\"w-5 h-5\" />\n              <span className=\"font-medium\">Send NRN</span>\n            </button>\n          </div>\n\n          {/* Transaction History */}\n          <div>\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-white\">Recent Transactions</h3>\n              <button className=\"text-sm text-blue-400 hover:text-blue-300 transition-colors\">\n                View All\n              </button>\n            </div>\n\n            <div className=\"space-y-3\">\n              {transactions.map((tx) => (\n                <TransactionItem key={tx.id} {...tx} />\n              ))}\n            </div>\n          </div>\n\n          {/* Stats */}\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"text-xl font-bold text-green-400\">+127</div>\n              <div className=\"text-xs text-gray-400\">Earned Today</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"text-xl font-bold text-red-400\">-89</div>\n              <div className=\"text-xs text-gray-400\">Spent Today</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg\">\n              <div className=\"text-xl font-bold text-blue-400\">15</div>\n              <div className=\"text-xs text-gray-400\">Transactions</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Navigation */}\n      <nav className=\"fixed bottom-0 left-0 right-0 z-20 border-t border-gray-600/50 backdrop-blur-xl bg-gray-900/80\">\n        <div className=\"grid grid-cols-3 px-2 py-2\">\n          <button\n            onClick={() => navigate('/manager/skills')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/skills' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Zap className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Skills</span>\n          </button>\n          <button\n            onClick={() => navigate('/manager/udc')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/udc' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Shield className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">UDC</span>\n          </button>\n          <button\n            onClick={() => navigate('/manager/wallet')}\n            className={`flex flex-col items-center py-2 px-1 rounded-lg transition-colors ${\n              window.location.pathname === '/manager/wallet' ? 'text-blue-400 bg-blue-600/20' : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <Wallet className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Wallet</span>\n          </button>\n        </div>\n      </nav>\n\n      {/* Sliding Panels */}\n      <SlidingPanel\n        id=\"qr-scanner\"\n        isOpen={activePanels.includes('qr-scanner')}\n        onClose={() => closePanel('qr-scanner')}\n        title=\"QR Scanner\"\n        side=\"right\"\n      >\n        <QRScanner\n          onScan={(result) => console.log('QR Result:', result)}\n          onClose={() => closePanel('qr-scanner')}\n          isOpen={activePanels.includes('qr-scanner')}\n        />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"network-status\"\n        isOpen={activePanels.includes('network-status')}\n        onClose={() => closePanel('network-status')}\n        title=\"Network Status\"\n        side=\"right\"\n      >\n        <NetworkStatus connections={networkConnections} />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"agent-management\"\n        isOpen={activePanels.includes('agent-management')}\n        onClose={() => closePanel('agent-management')}\n        title=\"Agent Management\"\n        side=\"left\"\n      >\n        <AgentManager\n          agents={availableAgents}\n          nrvs={currentNRVs}\n          selectedNRV={selectedNRV}\n          onAgentAssignment={handleAgentAssignment}\n          nrnBalance={nrnBalance}\n        />\n      </SlidingPanel>\n\n      <SlidingPanel\n        id=\"cognitive-shell\"\n        isOpen={activePanels.includes('cognitive-shell')}\n        onClose={() => closePanel('cognitive-shell')}\n        title=\"Cognitive Shell\"\n        side=\"right\"\n      >\n        <CognitiveShellInterface\n          onStateChange={handleCognitiveStateChange}\n          onSkillInvoked={handleSkillInvoked}\n          onAdaptationTriggered={handleAdaptationTriggered}\n        />\n      </SlidingPanel>\n\n      {/* QR Code Modal */}\n      {showQRCode && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-700 rounded-xl p-6 max-w-sm w-full\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-white\">Wallet QR Code</h3>\n              <button\n                onClick={() => setShowQRCode(false)}\n                className=\"p-2 hover:bg-gray-700/50 rounded-lg text-gray-400 hover:text-white transition-all\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n            <div className=\"bg-white p-4 rounded-lg mb-4\">\n              <div className=\"w-48 h-48 mx-auto bg-gray-200 rounded-lg flex items-center justify-center\">\n                <QrCode className=\"w-24 h-24 text-gray-600\" />\n              </div>\n            </div>\n            <p className=\"text-sm text-gray-400 text-center\">\n              Scan this QR code to send funds to your wallet\n            </p>\n            <p className=\"text-xs text-gray-500 text-center mt-2 font-mono break-all\">\n              {walletData.walletAddress}\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Add Funds Modal */}\n      {showAddFunds && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-700 rounded-xl p-6 max-w-md w-full\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-white\">Add Funds</h3>\n              <button\n                onClick={() => setShowAddFunds(false)}\n                className=\"p-2 hover:bg-gray-700/50 rounded-lg text-gray-400 hover:text-white transition-all\"\n                disabled={addFundsLoading}\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n            <div className=\"space-y-4\">\n              {addFundsError && (\n                <div className=\"p-3 bg-red-500/20 border border-red-500/30 rounded-lg\">\n                  <p className=\"text-sm text-red-400\">{addFundsError}</p>\n                </div>\n              )}\n\n              {addFundsSuccess && (\n                <div className=\"p-3 bg-green-500/20 border border-green-500/30 rounded-lg\">\n                  <p className=\"text-sm text-green-400\">Funds added successfully!</p>\n                </div>\n              )}\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Amount (NRN)</label>\n                <input\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  value={addFundsAmount}\n                  onChange={(e) => setAddFundsAmount(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-blue-400 focus:outline-none\"\n                  disabled={addFundsLoading}\n                  step=\"0.01\"\n                  min=\"0\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Payment Method</label>\n                <select\n                  value={addFundsMethod}\n                  onChange={(e) => setAddFundsMethod(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-blue-400 focus:outline-none\"\n                  disabled={addFundsLoading}\n                >\n                  <option>Credit Card</option>\n                  <option>Bank Transfer</option>\n                  <option>Crypto Transfer</option>\n                </select>\n              </div>\n              <button\n                onClick={executeAddFunds}\n                disabled={addFundsLoading || addFundsSuccess}\n                className=\"w-full py-3 bg-green-600 hover:bg-green-700 disabled:bg-green-600/50 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-all\"\n              >\n                {addFundsLoading ? 'Processing...' : addFundsSuccess ? 'Success!' : 'Add Funds'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Send NRN Modal */}\n      {showSendNRN && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gray-900 border border-gray-700 rounded-xl p-6 max-w-md w-full\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-white\">Send NRN</h3>\n              <button\n                onClick={() => setShowSendNRN(false)}\n                className=\"p-2 hover:bg-gray-700/50 rounded-lg text-gray-400 hover:text-white transition-all\"\n                disabled={sendNRNLoading}\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n            <div className=\"space-y-4\">\n              {sendNRNError && (\n                <div className=\"p-3 bg-red-500/20 border border-red-500/30 rounded-lg\">\n                  <p className=\"text-sm text-red-400\">{sendNRNError}</p>\n                </div>\n              )}\n\n              {sendNRNSuccess && (\n                <div className=\"p-3 bg-green-500/20 border border-green-500/30 rounded-lg\">\n                  <p className=\"text-sm text-green-400\">NRN sent successfully!</p>\n                </div>\n              )}\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Recipient Address</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"0x...\"\n                  value={sendNRNAddress}\n                  onChange={(e) => setSendNRNAddress(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-blue-400 focus:outline-none\"\n                  disabled={sendNRNLoading}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Amount (NRN)</label>\n                <input\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  value={sendNRNAmount}\n                  onChange={(e) => setSendNRNAmount(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-blue-400 focus:outline-none\"\n                  disabled={sendNRNLoading}\n                  step=\"0.01\"\n                  min=\"0\"\n                  max={walletData.nrnBalance}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Note (Optional)</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Payment for...\"\n                  value={sendNRNNote}\n                  onChange={(e) => setSendNRNNote(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-blue-400 focus:outline-none\"\n                  disabled={sendNRNLoading}\n                />\n              </div>\n              <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-3\">\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-400\">Network Fee:</span>\n                  <span className=\"text-white\">0.001 NRN</span>\n                </div>\n                <div className=\"flex justify-between text-sm mt-1\">\n                  <span className=\"text-gray-400\">Available Balance:</span>\n                  <span className=\"text-white\">{walletData.nrnBalance.toLocaleString()} NRN</span>\n                </div>\n              </div>\n              <button\n                onClick={executeSendNRN}\n                disabled={sendNRNLoading || sendNRNSuccess}\n                className=\"w-full py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-600/50 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-all\"\n              >\n                {sendNRNLoading ? 'Sending...' : sendNRNSuccess ? 'Success!' : 'Send NRN'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface TransactionItemProps {\n  type: 'consumption' | 'reward' | 'transfer';\n  amount: number;\n  description: string;\n  timestamp: string;\n  agentName: string | null;\n}\n\nfunction TransactionItem({ type, amount, description, timestamp, agentName }: TransactionItemProps) {\n  const typeConfig = {\n    consumption: { \n      icon: ArrowUpRight, \n      color: 'text-red-400', \n      bg: 'bg-red-500/20', \n      border: 'border-red-500/30',\n      prefix: '-'\n    },\n    reward: { \n      icon: ArrowDownLeft, \n      color: 'text-green-400', \n      bg: 'bg-green-500/20', \n      border: 'border-green-500/30',\n      prefix: '+'\n    },\n    transfer: { \n      icon: ArrowUpRight, \n      color: 'text-blue-400', \n      bg: 'bg-blue-500/20', \n      border: 'border-blue-500/30',\n      prefix: amount > 0 ? '+' : '-'\n    }\n  };\n\n  const config = typeConfig[type];\n  const Icon = config.icon;\n\n  return (\n    <div className=\"flex items-center justify-between p-4 bg-gray-800/80 border border-gray-600/50 rounded-lg hover:border-purple-500/30 transition-all\">\n      <div className=\"flex items-center space-x-3\">\n        <div className={`w-10 h-10 ${config.bg} ${config.border} border rounded-lg flex items-center justify-center`}>\n          <Icon className={`w-5 h-5 ${config.color}`} />\n        </div>\n        <div>\n          <p className=\"font-medium text-white\">{description}</p>\n          <div className=\"flex items-center space-x-2 text-xs text-gray-400\">\n            {agentName && <span>{agentName}</span>}\n            <span>•</span>\n            <span>{new Date(timestamp).toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"text-right\">\n        <p className={`font-semibold ${config.color}`}>\n          {config.prefix}{Math.abs(amount)} NRN\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":["WebSocketService","url","resolve","error","type","data","message","eventType","callback","listeners","index","event","delay","agentId","accountId","dashboardId","taskId","entityType","entityId","prefix","eventsToRemove","webSocketService","subscribeToWallet","WalletPage","navigate","useNavigate","menuOpen","setMenuOpen","useState","activePanels","setActivePanels","showQRCode","setShowQRCode","showAddFunds","setShowAddFunds","showSendNRN","setShowSendNRN","copySuccess","setCopySuccess","cognitiveState","setCognitiveState","cognitiveMode","setCognitiveMode","addFundsLoading","setAddFundsLoading","sendNRNLoading","setSendNRNLoading","addFundsError","setAddFundsError","sendNRNError","setSendNRNError","addFundsSuccess","setAddFundsSuccess","sendNRNSuccess","setSendNRNSuccess","addFundsAmount","setAddFundsAmount","addFundsMethod","setAddFundsMethod","sendNRNAddress","setSendNRNAddress","sendNRNAmount","setSendNRNAmount","sendNRNNote","setSendNRNNote","networkConnections","availableAgents","currentNRVs","selectedNRV","nrnBalance","walletData","useEffect","transactions","closePanel","panelId","prev","id","openCognitiveShell","toggleNetworkPanel","toggleAgentPanel","handleCopyAddress","walletAddress","err","handleShowQRCode","handleAddFunds","handleSendNRN","executeAddFunds","response","apiService","isAPIError","getErrorMessage","executeSendNRN","handleQRScan","handleCognitiveStateChange","state","stateObj","handleSkillInvoked","skillId","result","handleAdaptationTriggered","adaptation","handleAgentAssignment","nrv","agent","BurgerMenu","isOpen","onToggle","children","jsxs","jsx","MenuItem","onClick","icon","Zap","TrendingUp","Wallet","CheckCircle","Copy","QrCode","ArrowDownLeft","ArrowUpRight","tx","TransactionItem","Shield","SlidingPanel","QRScanner","NetworkStatus","AgentManager","CognitiveShellInterface","X","e","amount","description","timestamp","agentName","config","Icon"],"mappings":"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"}