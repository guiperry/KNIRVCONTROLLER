{"version":3,"file":"knirv_cortex_wasm-Bizf8tUv.js","sources":["../../src/wasm-pkg/knirv_cortex_wasm.js"],"sourcesContent":["let wasm;\n\nfunction addToExternrefTable0(obj) {    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getStringFromWasm0(_ptr, _len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(_ptr, ptr + _len));\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(_ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(_len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== _len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(_ptr, _len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + _len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(_ptr, _len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nexport function main() {\n    wasm.main();\n}\n\nfunction __wbg_adapter_32(arg0, arg1, arg2, arg3) {\n    wasm.closure22_externref_shim(arg0, arg1, arg2, arg3);\n}\n\nconst HRMCognitiveFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_hrmcognitive_free(ptr >>> 0, 1));\n\nexport class HRMCognitive {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        HRMCognitiveFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_hrmcognitive_free(_ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.hrmcognitive_new();\n        this.__wbg_ptr = ret >>> 0;\n        HRMCognitiveFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @param {number} l_count\n     * @param {number} h_count\n     */\n    initialize_modules(l_count, h_count) {\n        wasm.hrmcognitive_initialize_modules(this.__wbg_ptr, l_count, h_count);\n    }\n    /**\n     * @param {string} input_json\n     * @returns {string}\n     */\n    process_cognitive_input(input_json) {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ptr0 = passStringToWasm0(input_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            const ret = wasm.hrmcognitive_process_cognitive_input(this.__wbg_ptr, ptr0, len0);\n            deferred2_0 = ret[0];\n            deferred2_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @returns {string}\n     */\n    get_model_info() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.hrmcognitive_get_model_info(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {Uint8Array} weights_data\n     * @returns {boolean}\n     */\n    load_weights(weights_data) {\n        const ptr0 = passArray8ToWasm0(weights_data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.hrmcognitive_load_weights(this.__wbg_ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n     * @param {string} url\n     * @returns {Promise<any>}\n     */\n    load_weights_from_url(url) {\n        const ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.hrmcognitive_load_weights_from_url(this.__wbg_ptr, ptr0, len0);\n        return ret;\n    }\n    /**\n     * @returns {string}\n     */\n    get_weights_info() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.hrmcognitive_get_weights_info(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {string} desktop_id\n     * @returns {boolean}\n     */\n    connect_to_desktop(desktop_id) {\n        const ptr0 = passStringToWasm0(desktop_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.hrmcognitive_connect_to_desktop(this.__wbg_ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n     * @param {string} message_type\n     * @param {string} payload\n     * @returns {string}\n     */\n    send_host_message(message_type, payload) {\n        let deferred3_0;\n        let deferred3_1;\n        try {\n            const ptr0 = passStringToWasm0(message_type, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            const ptr1 = passStringToWasm0(payload, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len1 = WASM_VECTOR_LEN;\n            const ret = wasm.hrmcognitive_send_host_message(this.__wbg_ptr, ptr0, len0, ptr1, len1);\n            deferred3_0 = ret[0];\n            deferred3_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n        }\n    }\n    /**\n     * @returns {string}\n     */\n    get_pending_messages() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.hrmcognitive_get_pending_messages(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {string} metric\n     * @param {number} value\n     */\n    set_personality_metric(metric, value) {\n        const ptr0 = passStringToWasm0(metric, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.hrmcognitive_set_personality_metric(this.__wbg_ptr, ptr0, len0, value);\n    }\n    /**\n     * @returns {string}\n     */\n    get_personality_profile() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.hrmcognitive_get_personality_profile(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {string} task_id\n     * @param {number} feedback\n     */\n    update_user_feedback(task_id, feedback) {\n        const ptr0 = passStringToWasm0(task_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.hrmcognitive_update_user_feedback(this.__wbg_ptr, ptr0, len0, feedback);\n    }\n    /**\n     * @returns {string}\n     */\n    get_cognitive_state() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.hrmcognitive_get_cognitive_state(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {string} mode\n     */\n    set_processing_mode(mode) {\n        const ptr0 = passStringToWasm0(mode, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.hrmcognitive_set_processing_mode(this.__wbg_ptr, ptr0, len0);\n    }\n    clear_memory_buffer() {\n        wasm.hrmcognitive_clear_memory_buffer(this.__wbg_ptr);\n    }\n    /**\n     * @returns {string}\n     */\n    get_memory_summary() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.hrmcognitive_get_memory_summary(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_call_7cccdd69e0791ae2 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_log_bc9908cbe3049010 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_new_23a2665fac83c611 = function(arg0, arg1) {\n        try {\n            const state0 = {a: arg0, b: arg1};\n            const cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_32(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return ret;\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_now_807e54c39636c349 = function() {\n        const ret = Date.now();\n        return ret;\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('knirv_cortex_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n"],"names":["wasm","handleError","f","args","cachedTextDecoder","cachedUint8ArrayMemory0","getUint8ArrayMemory0","getStringFromWasm0","_ptr","_len","debugString","val","type","description","name","length","debug","i","builtInMatches","className","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","arg","view","buf","passStringToWasm0","malloc","realloc","ptr","len","mem","offset","code","ret","cachedDataViewMemory0","getDataViewMemory0","passArray8ToWasm0","main","__wbg_adapter_32","arg0","arg1","arg2","arg3","HRMCognitiveFinalization","HRMCognitive","l_count","h_count","input_json","deferred2_0","deferred2_1","ptr0","len0","deferred1_0","deferred1_1","weights_data","url","desktop_id","message_type","payload","deferred3_0","deferred3_1","ptr1","len1","metric","value","task_id","feedback","mode","__wbg_load","module","imports","e","bytes","instance","__wbg_get_imports","state0","cb0","a","table","__wbg_finalize_init","__wbg_init","initSync","module_or_path"],"mappings":"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"}