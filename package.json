{
  "name": "knirv-controller-unified",
  "version": "1.0.0",
  "description": "Unified KNIRV Controller - Frontend application with integrated manager interface and slideout functionality",
  "type": "module",
  "main": "dist/index.html",
  "scripts": {
    "dev": "vite --host 0.0.0.0 --port 3000",
    "build": "tsc --noEmit && npm run build:wasm && vite build",
    "build:simple": "./scripts/build-simple.sh",
    "build:pwa": "node scripts/build-pwa.js",
    "build:pwa:android": "npm run build && npx cap sync android",
    "build:pwa:ios": "npm run build && npx cap sync ios",
    "deploy": "node scripts/deploy.js",
    "deploy:dns": "node scripts/deploy-cloudflare.js dns-only",
    "deploy:verify": "node scripts/deploy-cloudflare.js verify",
    "build:wasm": "./scripts/build-wasm-assemblyscript.sh",
    "build:wasm:rust": "./scripts/build-wasm.sh",
    "build:wasm:assemblyscript": "asc assembly/index.ts --target release --outFile build/knirv-controller.wasm --bindings esm",
    "build:wasm:as": "npm run build:wasm:assemblyscript",
    "build:frontend": "vite build",
    "start": "node scripts/serve-static.js",
    "preview": "vite preview --host 0.0.0.0 --port 3000",
    "start:production": "node scripts/serve-static.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:knirvrouter": "jest --testPathPattern=integration/knirvrouter-integration.test.ts",
    "test:all": "jest --testPathPattern='(unit|integration)'",
    "test:e2e": "playwright test",
    "test:accessibility": "jest --testPathPattern=accessibility",
    "analyze-bundle": "ANALYZE=true vite build",
    "server": "ts-node src/server/api-server.ts",
    "dev:full": "concurrently \"npm run server\" \"npm run dev\"",
    "build:eas": "sh scripts/build-with-eas.sh",
    "build:android": "npm run build:eas -- --platform android",
    "build:ios": "npm run build:eas -- --platform ios",
    "build:server": "tsc src/server/api-server.ts --outDir dist/server",
    "start:prod": "node dist/server/api-server.js",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0 --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "reset": "rm -rf dist node_modules && npm install",
    "clean": "npm run clean && npm run build",
    "install:all": "npm install",
    "build:unified": "npm run build",
    "serve": "npm run preview",
    "db:migrate": "node scripts/migrate-to-nebuladb.cjs",
    "db:seed": "node scripts/seed-database.js",
    "db:setup": "npm run db:migrate && npm run db:seed",
    "db:backup": "node -e \"console.log('Creating database backup...'); require('fs').copyFileSync('./data/knirvcontroller.db', `./data/backup-${new Date().toISOString().replace(/[:.]/g, '-')}.db`); console.log('Backup created successfully');\"",
    "db:restore": "echo 'Usage: npm run db:restore -- <backup-file-path>'",
    "db:status": "node -e \"const fs = require('fs'); const path = './data/knirvcontroller.db'; console.log(fs.existsSync(path) ? 'Database exists: ' + fs.statSync(path).size + ' bytes' : 'Database not found');\""
  },
  "dependencies": {
    "@bufbuild/protobuf": "^2.6.3",
    "@burnt-labs/abstraxion": "^1.0.0-alpha.66",
    "@burnt-labs/ui": "^0.1.0-alpha.17",
    "@cosmjs/stargate": "^0.36.0",
    "@gnolang/tm2-js-client": "^1.3.0",
    "@napi-rs/wasm-runtime": "^1.0.3",
    "@react-three/drei": "^10.7.4",
    "@react-three/fiber": "^9.3.0",
    "@sentry/browser": "^10.10.0",
    "@sentry/react": "^10.10.0",
    "@tensorflow/tfjs": "^4.22.0",
    "@types/lokijs": "^1.5.14",
    "@types/react-router-dom": "^5.3.3",
    "@types/three": "^0.170.0",
    "@types/uuid": "^10.0.0",
    "archiver": "^7.0.1",
    "bech32": "^2.0.0",
    "compression": "^1.8.1",
    "express": "^4.19.2",
    "helmet": "^8.1.0",
    "hono": "^4.9.5",
    "lokijs": "^1.5.12",
    "lucide-react": "^0.510.0",
    "nebuladb": "^1.1.0",
    "pino": "^9.9.1",
    "qr-scanner": "^1.4.2",
    "qrcode": "^1.5.3",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-native": "^0.80.2",
    "react-router": "^7.5.3",
    "react-router-dom": "^6.30.1",
    "resolve.exports": "^2.0.3",
    "rxdb": "^16.18.0",
    "rxjs": "^7.8.2",
    "three": "^0.170.0",
    "uuid": "^11.1.0",
    "vite-plugin-top-level-await": "^1.6.0",
    "vite-plugin-wasm": "^3.5.0",
    "zod": "^3.24.3"
  },
  "devDependencies": {
    "@assemblyscript/loader": "^0.27.28",
    "@axe-core/react": "^4.10.2",
    "@babel/core": "^7.23.0",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-transform-runtime": "^7.28.3",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@capacitor/android": "^6.1.0",
    "@capacitor/cli": "^6.1.0",
    "@capacitor/core": "^6.1.0",
    "@capacitor/ios": "^6.1.0",
    "@cloudflare/vite-plugin": "^1.9.6",
    "@cosmjs/cosmwasm-stargate": "^0.36.0",
    "@cosmjs/proto-signing": "^0.36.0",
    "@eslint/js": "9.25.1",
    "@getmocha/users-service": "^0.0.4",
    "@getmocha/vite-plugins": "latest",
    "@jest/globals": "^29.7.0",
    "@playwright/test": "^1.40.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.4.6",
    "@testing-library/react": "^16.0.0",
    "@testing-library/react-native": "^13.3.3",
    "@testing-library/user-event": "^14.5.2",
    "@types/compression": "^1.8.1",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/node": "22.14.1",
    "@types/react": "^19.1.0",
    "@types/react-dom": "^19.1.0",
    "@types/supertest": "^6.0.3",
    "@vitejs/plugin-react": "4.4.1",
    "assemblyscript": "^0.27.28",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.10.3",
    "babel-jest": "^29.7.0",
    "babel-plugin-module-resolver": "^5.0.2",
    "eas-cli": "^10.1.0",
    "eslint": "9.25.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-react-refresh": "0.4.19",
    "expo": "^51.0.21",
    "expo-linear-gradient": "^14.1.5",
    "globals": "15.15.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-html-reporters": "^3.1.0",
    "jest-junit": "^16.0.0",
    "jest-transform-stub": "^2.0.0",
    "jest-watch-typeahead": "^2.2.0",
    "lucide-react-native": "^0.542.0",
    "playwright": "^1.40.0",
    "postcss": "^8.5.3",
    "react-native-safe-area-context": "^5.6.1",
    "react-native-web": "^0.21.1",
    "react-test-renderer": "^19.1.1",
    "rollup-plugin-visualizer": "^6.0.3",
    "supertest": "^7.1.4",
    "tailwindcss": "^3.4.17",
    "text-encoding": "^0.7.0",
    "ts-jest": "^29.2.2",
    "ts-node": "^10.9.2",
    "typescript": "5.8.3",
    "typescript-eslint": "8.31.0",
    "vite": "6.3.2",
    "vite-bundle-analyzer": "^1.2.3",
    "wrangler": "^4.25.0"
  },
  "engines": {
    "node": ">=20.0.0",
    "rust": ">=1.70.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/guiperry/KNIRV_NETWORK.git",
    "directory": "KNIRVCONTROLLER"
  },
  "keywords": [
    "knirv",
    "controller",
    "ai",
    "blockchain",
    "lora",
    "cognitive-shell",
    "wasm",
    "agent-core",
    "neural-networks",
    "unified",
    "frontend",
    "slideout",
    "manager",
    "qr-scanner"
  ],
  "author": "KNIRV Network",
  "license": "MIT"
}
